def input_data (text="Введите число:"):
    Input=input(text)
    while not(Input.isdigit()):
        Input=input(text)
    return int(Input)

def create_list(count=0,min=0,max=10):
    list_number=[]
    for _ in range(0,count):
        list_number.append(random.randint(min,max))
    return list_number

# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке 
# возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. Затем 
# пользователь вводит сами элементы множеств.
import random
print("Задача 22")
n=input_data("Введите количество элементов первого множества n:")
m=input_data('Введите количество элементов второго множества m:')
list_n=create_list(n)
list_m=create_list(m)
print(list_n)
print(list_m)
set_result=set(list_n) | set(list_m)
print(set_result)

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены 
# только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте 
# выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и 
# нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
# собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.
print("Задача 24")
ii=input_data("Введите количество кустов i:")
list_ai=create_list(ii)
print(list_ai)
max_sum=0
for i in range(0,ii-1):
    if i==ii: sum=list_ai[i-1]+list_ai[i]+list_ai[0]
    else: sum=list_ai[i-1]+list_ai[i]+list_ai[i+1]
    if max_sum<sum:max_sum=sum
print(max_sum)
